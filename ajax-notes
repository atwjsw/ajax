ajax notes

#AJAX的作用
- 异步交互

#AJAX的核心
- XMLHttpRequest对象
- 运用HTML和CSS来实现页面，表达信息；
- 运用XMLHttpRequest和web服务器进行数据的异步交换；（本次课程重点）
- 运用JavaScript操作DOM，实现动态局部刷新。


#XMLHttpRequest对象
- 简称XHR
var request = new XMLHttpRequest();

#HTTP
- 通信协议
- 客户浏览器与服务器沟通
- 无状态，服务端不保留连接

#语法
发送
- open(method, url, async)， async默认true
- send(string)
获取响应内容
- responseText： 获取字符串类型的响应数据
- responseXML：获取XML形式的响应数据，现在XML一般用的比较少
- status和statusText: 以数字和文本形式返回HTTP状态码
- getAllResponseHeader(): 获取所有的响应报头
- getResponseHeader(): 查询响应中的某个字段的值
得到响应的通知
readyState属性
- 0/1/2/3/4状态,关注4
- request.onreadystatechange() = function() {
	if (request.readyState===4&&request.status===200) {
		//do something with request.response.Text
	}
}

#JSON
- 长度比XML小，利于网络传输
- 读写速度快
- JavaScript的支持很好，XML差很多，用内置的方法就可以解释
- AJAX数据传输的事实标准
- 格式：键值对"key":"value"
- 支持的数据类型： 整数或浮点数， 123， 123.12， 字符串""中， 逻辑值：true/false， 数组[], 对象{}, null
- 例如：
{
	"employees": [
		{"name":"洪七", "age": 70},
		{"name":"郭靖", "age": 35},
		{"name":"黄蓉", "age": 30}
	]
}
- 解释方式： JSON.parse(jsonstring); //尽量不要用eval
- 校验方法：jsonlint.com

#JQuery
- 一般都用Jquery来使用AJAX
- JQuery.ajax([settings])
- type:"POST", "GET", url, data:请求数据， dataType：预期服务器返回的数据，不指定则根据http包MIME来判断
success：方法，请求成功的第回调函数
error: 失败的回调函数。传入XHR对象

#跨域
- 当不同域之间相互请求资源时， 域名地址中地址、域名、端口号中任意一项不同，则属性跨域请求。
- JavaScript出于安全方面的考虑，不允许跨域调用其他页面的对象。
- 跨域可简单理解谓由于JavaScript同源策略的限制，a.com域名下的js无法操作b.com或者c.a.com域名下的对象

#JSONP
- 解决主流浏览器GET请求的跨域问题
- 利用script标签本身可以跨域引入js的特点：<script src="http://www.bbb.com/jsonp.js>
- 但实际上www.bbb.com上是没有jsonp.js,  动态生成？

#XHR2
- HTML5提供的XMLHttpRequest Level2实现了跨域以及其他新功能的支持
- IE10以下不支持， 但IE有自己的实现方式
- 在服务端做一些小小的改造即可
header('Access-Control-Allow-Origin:*')
header('Access-Control-Allow-Methods:POST,GET')